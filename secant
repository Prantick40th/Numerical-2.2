#include <bits/stdc++.h>
using namespace std;

float f(float x)
{
    float f = x*x*x + x -1;

    return f;
}

void secant(float x1, float x2, float E)
{
    float n = 0,xm,x0;

    if (f(x1) * f(x2) < 0) {
        do {

            x0 = (x1*f(x2) - x2*f(x1)) / (f(x2) - f(x1));


            float c = f(x1) * f(x0);

            x1 = x2;
            x2 = x0;

            n++;

            if (c == 0)
                break;

            xm = (x1 * f(x2) - x2 * f(x1)) / (f(x2) - f(x1));

        } while (fabs(xm - x0) >= E);



        printf("\nroot %f",x0);
        printf("\nitr %f",n);

    } else
        cout << "Can not find a root in the given inteval";
}

// Driver code
int main()
{
    float x1 = 0, x2 = 1, E = 0.0001;
    secant(x1, x2, E);
    return 0;
}

///////////////////////////////////////////////////////////////////////////

#include<stdio.h>
float f(float x)
{
    return(x*x*x-4); // f(x)= x^3-4
}
float main()
{
    float a,b,c,d,e;
    int count=1,n;
    printf("\n\nEnter the values of a and b:\n"); //(a,b) must contain the solution.
    scanf("%f%f",&a,&b);
    printf("Enter the values of allowed error and maximun number of iterations:\n");
    scanf("%f %d",&e,&n);
    do
    {
        if(f(a)==f(b))
        {
            printf("\nSolution cannot be found as the values of a and b are same.\n");
        return;
        }
        c=(a*f(b)-b*f(a))/(f(b)-f(a));
        a=b;
        b=c;
        printf("Iteration No-%d    x=%f\n",count,c);
        count++;
        if(count==n)
        {
        break;
        }
    } while(fabs(f(c))>e);
    printf("\n The required solution is %f\n",c);
 
}
